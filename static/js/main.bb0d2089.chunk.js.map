{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","a","fetch","usersDataList","json","getData","then","setState","this","filteredMonster","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAGaA,EAAK,SAACC,GAAD,OACd,sBAA+BC,UAAU,iBAAzC,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BAAqEC,IAAI,KACjF,6BAAKL,EAAMG,SAASG,OACpB,4BAAIN,EAAMG,SAASI,UAHbP,EAAMG,SAASG,OCChBE,EAAS,SAACR,GACnB,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMG,SAASM,KAEb,SAAAN,GAAQ,OAAK,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCRlCM,G,MAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACjC,OACI,uBACAC,KAAK,SACLZ,UAAU,SACVU,YAAaA,EACbG,SAAUF,MCwCHG,E,kDA1Cb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTb,SAAS,GACTc,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,QACJ,uCAAC,4BAAAC,EAAA,sEACYC,MAAM,8CADlB,cACRC,EADQ,gBAEQA,EAAcC,OAFtB,cAEZD,EAFY,yBAGLA,GAHK,2CAAD,qDAKbE,GACCC,MACC,SAAAH,GAAa,OAAE,EAAKI,SAAS,CAACrB,SAASiB,S,oBAI3C,WAAS,IAAD,SACuBK,KAAKT,MAA3Bb,EADD,EACCA,SAASc,EADV,EACUA,YACVS,EAAgBvB,EAASwB,QAC7B,SAAAC,GACE,OAAQA,EAAQtB,KAAKuB,cAAcC,SAASb,EAAYY,kBAI5D,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,aACtC,SAAAmB,GACE,EAAKP,SAAS,CAACP,YAAYc,EAAEC,OAAOC,WAGxC,cAAC,EAAD,CAAU9B,SAAUuB,W,GArCVQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb0d2089.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css'\r\n\r\nexport const Card=(props)=>(\r\n    <div key={props.monsters.name} className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`} alt=\"\" />\r\n        <h2>{props.monsters.name}</h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\nimport './card-list.style.css'\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList=(props)=>{\r\n    return (\r\n        <div className=\"card-list\">\r\n          { props.monsters.map\r\n            ( \r\n              monsters=> ( <Card key={monsters.id} monsters={monsters}/> )\r\n            ) \r\n          }\r\n          \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './search-box.style.css';\r\nexport const SearchBox=({placeholder,handleChange})=>{\r\n    return(\r\n        <input\r\n        type=\"search\" \r\n        className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        />\r\n    )\r\n}","import react,{Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:\"\"\n    }\n  }\n\n  componentDidMount(){\n    const getData=async ()=>{\n      let usersDataList=await fetch('https://jsonplaceholder.typicode.com/users');\n      usersDataList=await usersDataList.json();\n      return usersDataList;\n    }\n    getData()\n    .then(\n      usersDataList=>this.setState({monsters:usersDataList})\n    );\n  }\n\n  render(){\n    const {monsters,searchField}=this.state;\n    const filteredMonster=monsters.filter(\n      monster=> {\n        return (monster.name.toLowerCase().includes(searchField.toLowerCase()))\n      }\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"Search-Monster\" handleChange={\n          e=>{\n            this.setState({searchField:e.target.value})\n          }\n        }/>\n        <CardList monsters={filteredMonster}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}